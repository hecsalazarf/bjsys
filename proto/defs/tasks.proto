syntax = "proto3";

package taskstub;

service TasksCore {
  // Create a new task (producer)
  rpc Create(CreateRequest) returns (CreateResponse) {}

  // Acknowledge that a task was processed (consumer)
  rpc Acknowledge(AcknowledgeRequest) returns (Empty) {}

  // Fetch to process tasks (consumer)
  rpc Fetch(FetchRequest) returns (stream FetchResponse) {}
}

// Create Request
message CreateRequest {
  string queue = 1;
  string data = 2;
  uint32 retry = 3;
  uint64 delay = 4;
}

// Create Response
message CreateResponse {
  string task_id = 1;
}

// Acknowledge Request
message AcknowledgeRequest {
  string task_id = 1;
  string queue = 2;
  TaskStatus status = 3;
  string message = 4;
}

// Fetch Request
message FetchRequest {
  string hostname = 1;
  string kind = 2;
  string queue = 3;
  repeated string label = 4;
  uint32 workers = 5;
}

// FetchResponse
message FetchResponse {
  string id = 1;
  string queue = 2;
  string data = 3;
}

// Task status
enum TaskStatus {
  DONE = 0;
  FAILED = 1;
  CANCELED = 2;
}

// Empty response
message Empty {}
